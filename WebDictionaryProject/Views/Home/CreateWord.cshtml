@model DataAccessLayer.Entities.Words

@{ ViewData["Title"] = "CreateWord"; }

<h1>Yeni Kelime</h1>


<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="CreateWord" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Id" class="control-label"></label>
                <input readonly asp-for="Id" class="form-control" />
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Kelime" class="control-label"></label>
                <input asp-for="Kelime" class="form-control" />
                <span asp-validation-for="Kelime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="KelimeAnlami" class="control-label"></label>
                <input asp-for="KelimeAnlami" class="form-control" />
                <span asp-validation-for="KelimeAnlami" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" onclick="return validateForm()" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script>
    function validateForm() {
        let Kelime = $('#Kelime').val();
        let KelimeAnlami = $('#KelimeAnlami').val();
        if (Kelime == "") {
            alert("Kelime boş olamaz");
            return false;
        }
        else if (KelimeAnlami == "") {
            alert("Kelime anlamı boş olamaz");
            return false;
        }
        return true;
    }
</script>
}
